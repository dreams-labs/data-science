# Available Commands:
# aggregations:
#   - "sum", "mean", "median", "min", "max", "std"
# rolling stats:
#   - "sum", "mean", "median", "max", "min", "std"
# comparisons:
#   - "change", "pct_change", "difference"
# window_duration:
#   - Specifies the number of days per rolling window (e.g., 7 means a 7-day rolling window)
# lookback_periods:
#   - Defines how many periods to look back when calculating rolling stats (e.g., 8 means calculate rolling stats over 8 previous periods)

# Keyed on coin_id-date
wallet_cohorts:

  whales:
    buyers_new:
      aggregations:
        sum:
          scaling: "log"    # Scaling applied to sums, which can vary significantly in range.
      rolling:
        aggregations:
          sum:
            scaling: "log"
        window_duration: 10
        lookback_periods: 3
    total_bought:
      aggregations:
        sum:
          scaling: "log"    # Scaling applied to sums, which can vary significantly in range.
      rolling:
        aggregations:
          sum:
            scaling: "log"
        window_duration: 10
        lookback_periods: 3
    total_volume:
      aggregations:
        last:
          scaling: "log"    # Total sold should also be scaled to account for high variance.
    total_balance:
      aggregations:
        last:
          scaling: "log"    # Total sold should also be scaled to account for high variance.


  normies:
    buyers_new:
      aggregations:
        sum:
          scaling: "log"    # Scaling applied to sums, which can vary significantly in range.
      rolling:
        aggregations:
          sum:
            scaling: "log"
        window_duration: 10
        lookback_periods: 3
    total_bought:
      aggregations:
        sum:
          scaling: "log"    # Scaling applied to sums, which can vary significantly in range.
      rolling:
        aggregations:
          sum:
            scaling: "log"
        window_duration: 10
        lookback_periods: 3
    total_volume:
      aggregations:
        last:
          scaling: "log"    # Total sold should also be scaled to account for high variance.
    total_balance:
      aggregations:
        last:
          scaling: "log"    # Total sold should also be scaled to account for high variance.


# Time series keyed on coin_id-date
time_series:

  market_data:
    price:
      rolling:
        comparisons:
          pct_change:
            scaling: "none"
        window_duration: 10
        lookback_periods: 5
      indicators:
        rsi:
          parameters:
            window: 14
          aggregations:
            last:
              scaling: "none"
        ema:
          parameters:
            window: [12,26]

    volume:
      rolling:
        aggregations:
          sum:
            scaling: "log"
        comparisons:
          pct_change:
            scaling: "none"        # No scaling for percentage change, as it's already normalized.
        window_duration: 10
        lookback_periods: 5
    market_cap:
      aggregations:
        last:
          scaling: "log"


# Time series keyed on only date
macro_trends:

  gtrends_cryptocurrency_worldwide:
    aggregations:
      last:
        scaling: "none"
  btc_mvrv_z_score:
    aggregations:
      last:
        scaling: "none"
  btc_vdd_multiple:
    aggregations:
      last:
        scaling: "none"
    rolling:
      comparisons:
        pct_change:
          scaling: "none"
      window_duration: 10
      lookback_periods: 2
  global_volume:
    aggregations:
      last:
        scaling: "none"
    rolling:
      comparisons:
        pct_change:
          scaling: "none"
      window_duration: 10
      lookback_periods: 2
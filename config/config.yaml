training_data:
  # Variables used to define the training data

  # Defining the modeling and training periods (dates must follow YYYY-MM-DD format)
  training_period_start: '2024-01-01'  # Start date for the training period
  training_period_end: '2024-04-30'    # End date for the training period
  modeling_period_start: '2024-05-01'  # Start date for the modeling period
  modeling_period_end: '2024-05-07'    # End date for the modeling period

  # Shark coin thresholds
  shark_coin_minimum_inflows: 5000  # Minimum USD inflows for a coin to be considered a 'shark' coin
  shark_coin_profits_threshold: 20000  # Lifetime absolute USD profit threshold for a 'shark' coin
  shark_coin_return_threshold: 0.5  # Minimum lifetime percentage return threshold for a 'shark' coin (e.g., 50% ROI)

  # Shark wallet thresholds
  shark_wallet_type: 'is_shark'  # Shark wallet type identifier used in filtering
  shark_wallet_min_coins: 4  # Minimum number of coins a wallet must hold to be considered a shark
  shark_wallet_min_shark_rate: 0.4  # Minimum percentage of coins that meet the shark coin thresholds for the wallet to be classified as a shark (40%)

data_cleaning:
  # Variables used to clean and filter raw data before training data is built

  # profits_df filters: The goal is to remove wallets that don't belong in the dataset (e.g., CEX, mint, contract wallets)
  profitability_filter: 15000000  # Exclude wallets with profits or losses greater than or equal to this amount (USD)
  inflows_filter: 10000000  # Exclude wallets with inflows greater than or equal to this amount (USD)

  # prices_df filters: Define how to handle missing price data
  max_gap_days: 2  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
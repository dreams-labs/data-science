training_data:
  # Variables used to define the training data

  # Defining the modeling and training periods (dates must follow YYYY-MM-DD format)
  # The modeling period end date and training period start and end dates are automatically
  # imputed using utils.py function calculate_period_dates() when load_config() is run
  modeling_period_start: "2024-09-01"  # Start date for the modeling period
  modeling_period_duration: 7    # Duration of the modeling period in days
  training_period_duration: 30    # Duration of the training period in days

  # The entire training data generation pipeline will be run for this many additional \
  # windows, with the periods moved back the full modeling+training duration time
  additional_windows: 5

datasets:

  # Keyed on coin_id-date
  wallet_cohorts:

    whales:
      description: "cohort_whales"  # prefix that will be included in feature columns
      lookback_period: 90 # how long the window for wallet thresholds extends backwards
      wallet_minimum_inflows: 50000  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 50000000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 3000  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0.2  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 2  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      fill_method: "fill_zeros"
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

    normies:
      description: "cohort_normies"  # prefix that will be included in feature columns
      lookback_period: 90 # how long the window for wallet thresholds extends backwards
      wallet_minimum_inflows: 100  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 10000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 0  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 0  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      fill_method: "fill_zeros"
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

  # Keyed on coin_id-date
  time_series:

    market_data:
      price:
        description: "price"  # prefix that will be included in feature columns
        fill_method: "drop_records"
        sameness_threshold: 1  # columns with more than this % of one value will be dropped
      volume:
        description: "volume"  # prefix that will be included in feature columns
        fill_method: "drop_records"
        sameness_threshold: 1  # columns with more than this % of one value will be dropped
      market_cap:
        description: "market_cap"  # prefix that will be included in feature columns
        fill_method: "drop_records"
        sameness_threshold: 1  # columns with more than this % of one value will be dropped

  # # Keyed on only coin_id
  # coin_facts:

  #   coin_metadata:
  #     description: "metadata"  # prefix that will be included in feature columns
  #     fill_method: "drop_records"
  #     sameness_threshold: 0.95  # columns with more than this % of one value will be dropped
  #     chain_threshold: 30  # Minimum coins associated with a chain for the chain to become a boolean feature


  # Keyed on only date
  macro_trends:

    gtrends_cryptocurrency_worldwide:
      description: "cryptocurrency_worldwide"
      fill_method: "extend"
    btc_mvrv_z_score:
      description: "btc_mvrv_z_score"
      fill_method: "extend"
    btc_vdd_multiple:
      description: "btc_vdd_multiple"
      fill_method: "extend"
    global_volume:
      description: "global_volume"
      fill_method: "extend"
    global_market_cap:
      description: "global_market_cap"
      fill_method: "extend"


data_cleaning:
  # Variables used to clean and filter raw data before training data is built

  # profits_df filters: The goal is to remove wallets that don't belong in the dataset (e.g., CEX, mint, contract wallets)
  profitability_filter: 15000000  # Exclude wallets with profits or losses greater than or equal to this amount (USD)
  inflows_filter: 10000000  # Exclude wallets with inflows greater than or equal to this amount (USD)

  # market_data_df filters: Define how to handle missing price data
  max_gap_days: 25  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
  min_daily_volume: 10000 # Minimum average daily volume the coin must have
  exclude_coins_without_transfers: True  # determines whether to create price features for coins without transfers data

  # wallet filters: defines which wallets are included in analysis
  minimum_wallet_inflows: 10 # The amount of total USD inflows a wallet must have to be included in the training data

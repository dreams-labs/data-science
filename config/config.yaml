training_data:
  # Variables used to define the training data

  # Defining the modeling and training periods (dates must follow YYYY-MM-DD format)
  # The modeling period end date and training period start and end dates are automatically
  # imputed using utils.py function calculate_period_dates() when load_config() is run
  modeling_period_start: "2024-10-15"  # Start date for the modeling period
  modeling_period_duration: 30    # Duration of the modeling period in days
  training_period_duration: 90    # Duration of the training period in days

  # The entire training data generation pipeline will be run for this many additional \
  # windows, with the periods moved back the full modeling+training duration time
  additional_windows: 0
  time_window_frequency: 20 # how many days apart each time_window should start

datasets:

  # Keyed on coin_id-date
  time_series:

    market_data:
      price:
        sameness_threshold: .95  # columns with more than this % of one value will be dropped
      volume:
        sameness_threshold: .95  # columns with more than this % of one value will be dropped
      market_cap:
        sameness_threshold: .95  # columns with more than this % of one value will be dropped
      mfi:
        sameness_threshold: .95  # columns with more than this % of one value will be dropped
      obv:
        sameness_threshold: .95  # columns with more than this % of one value will be dropped

  # Keyed on coin_id-date
  wallet_cohorts:

    whales_longterm:
      lookback_period: 150 # how long the window for wallet thresholds extends backwards before the training_period_start
      wallet_minimum_inflows: 50000  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 50000000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 15000  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0.5  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 6  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

    whales:
      lookback_period: 0 # how long the window for wallet thresholds extends backwards before the training_period_start
      wallet_minimum_inflows: 50000  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 50000000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 10000  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0.3  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 4  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

    normies:
      lookback_period: 0 # how long the window for wallet thresholds extends backwards before the training_period_start
      wallet_minimum_inflows: 100  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 10000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 0  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 0  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

    midtier:
      lookback_period: 0 # how long the window for wallet thresholds extends backwards before the training_period_start
      wallet_minimum_inflows: 10000  # Minimum USD inflows for a wallet to be considered a "shark"
      wallet_maximum_inflows: 50000  # Maximum USD inflows for a wallet to be considered a "shark"
      coin_profits_win_threshold: 0  # Lifetime absolute USD profit threshold for a coin to be classified as a "win"
      coin_return_win_threshold: 0  # Minimum lifetime percentage return threshold for a coin to be classified as a "win"
      wallet_min_coin_wins: 0  # Minimum number of coins that meet the "win" threshold for a wallet to join the cohort
      sameness_threshold: 0.95  # columns with more than this % of one value will be dropped

  # # Keyed on only coin_id
  # coin_facts:

  #   coin_metadata:
  #     fill_method: "drop_records"
  #     sameness_threshold: 0.95  # columns with more than this % of one value will be dropped
  #     chain_threshold: 30  # Minimum coins associated with a chain for the chain to become a boolean feature


  # Keyed on only date
  macro_trends:

    # btc_price:
    #     sameness_threshold: .9  # columns with more than this % of one value will be dropped
    # gtrends_cryptocurrency_worldwide:
    #     sameness_threshold: .9  # columns with more than this % of one value will be dropped
    # btc_mvrv_z_score:
    #     sameness_threshold: .9  # columns with more than this % of one value will be dropped
    # # btc_vdd_multiple:
    # #     sameness_threshold: .9  # columns with more than this % of one value will be dropped
    # global_volume:
    #     sameness_threshold: .9  # columns with more than this % of one value will be dropped
    # global_market_cap:
    #     sameness_threshold: .9  # columns with more than this % of one value will be dropped


data_cleaning:
  # Variables used to clean and filter raw data before training data is built

  # Wallet filters
  max_wallet_inflows: 25_000_000  # Exclude wallets with inflows greater than or equal to this amount (USD)
  min_wallet_inflows: 10 # The amount of lifetime USD inflows a wallet-coin pair must have to be included in the training data
  maximum_market_cap_share: 0.3 # if a wallet ever owns more than this % of a coin's market cap, remove it

  # market_data_df filters: Define how to handle missing price data
  max_gap_days: 3  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
  min_daily_volume: 10000 # Minimum average daily volume the coin must have
  exclude_coins_without_transfers: True  # determines whether to create price features for coins without transfers data

  # coverage filters
  price_coverage_warning_min_coin_increase: 100  # if this many coin prices has recently become imputed...
  price_coverage_warning_min_pct_increase: 0.05  # ...and the % of imputed coin prices has increased by this value, issue a warning
  transfers_coverage_warning_min_coin_increase: 10  # if this many coins have lost transfers data...
  transfers_coverage_warning_min_pct_increase: 0.001  # ...and the % of coin without transfers data has increased by this value, issue a warning

# CheckpointValidation
# WalletModel Config


# CheckpointValidation
# WalletModel Period Boundaries
training_data:
    training_window_starts: [
        # '2020-01-01',
        # '2021-01-01',
        # '2022-01-01',
        '2023-01-01',
        # '2023-06-01',
        # '2023-09-01',
        '2024-01-01',
        # '2024-02-01',
        # '2024-03-01',
        '2024-04-01',
        # '2024-05-01',
        # '2024-06-01',
        # '2024-07-01',
        # '2024-08-01',
        '2024-09-01',
        # '2024-10-01',
    ]
    modeling_period_start: '2024-10-01'
    modeling_period_end: '2024-10-31'
    validation_period_end: '2024-11-30'

    # Whether to use hybrid coin-wallet ids
    hybridize_wallet_ids: False  # if true, training data will be keyed on wallet-coin pairs

    # Local pipeline configs
    dataset: prod  # Set to prod or dev; determines whether to query core or dev dataset tables
    parquet_folder: temp/wallet_modeling_dfs  # where to store parquet files


# CheckpointValidation
# WalletModel Cleaning
data_cleaning:

    # Wallet cohort thresholds
    min_coins_traded: 1  # Exclude wallets that have traded fewer coins than this during the training period; overridden to 1 if hybrid IDs are used
    max_coins_traded: 50  # Exclude wallets that have traded more coins than this during the training period

    min_wallet_investment: 10000 # time weighted average balance filter
    min_wallet_inflows: 10000  # Exclude wallets with inflows below this amount (USD)
    min_wallet_volume: 10000  # Exclude wallets with fewer than this amount of training period USD volume

    max_wallet_investment: 10_000_000 # time weighted average balance filter
    max_wallet_inflows: 100_000_000  # Exclude wallets with inflows greater than or equal to this amount (USD)
    max_wallet_volume: 25_000_000  # Exclude wallets with fewer than this amount of training period USD volume
    max_wallet_profits: 100_000_000  # Exclude wallets with aggregate net gain above this amount (USD)

    # Market data filters
    max_initial_market_cap: 999150_000_000  # coins above this market cap as of the start of the training period will be removed from all datasets
    max_gap_days: 30  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
    min_daily_volume: 500 # Minimum average daily volume the coin must have

    # Warnings about potential data gaps in profits_df or market_data_df
    coverage_decrease_audit_window: 10  # how far to look back to assess decreases in coverage
    price_coverage_warning_min_coin_increase: 100  # if this many coin prices has recently become imputed...
    price_coverage_warning_min_pct_increase: 0.03  # ...and the % of imputed coin prices has increased by this value, issue a warning
    transfers_coverage_warning_min_coin_increase: 150  # if this many coins have lost transfers data...
    transfers_coverage_warning_min_pct_increase: 0.05  # ...and the % of coin without transfers data has increased by this value, issue a warning

    # Market cap imputation filters
    min_mc_imputation_coverage: 0.1  # coins with market cap coverage below this level will have hardcoded market cap values filled
    max_mc_imputation_multiple: 3.0  # will not impute dates where the imputed market cap exceeds the max known market cap * this ratio
    market_cap_default_fill:  500000  # coins below the imputation coverage level will have empty values filled with this


# CheckpointValidation
# WalletModel Features
features:
    # Trading Params
    include_twb_metrics: False  # whether to calculate time weighted balances
    include_twr_metrics: False  # whether to calculate time weighted returns
    usd_materiality: 5  # dates with both transfers and balances below this level will be ignored for time weighted returns
    twr_max_annual_return: 100.0  # caps the max annual return at this percent (100.0 is a 100x return)

    # Performance Params
    returns_winsorization: 0.01
    ranking_ntiles: 2

    # Market Timing Params
    offset_winsorization: 0.02 # comparisons between metrics and their offset values will be winsorized by this amount
    timing_metrics_min_transaction_size: 20  # trades below this USD threshold will not be evaluated for market timing peformance or transfers buyer sequencing

    # Market Cap Params
    market_cap_feature_columns: [  # which columns to generate market cap features with
        market_cap_filled,
        market_cap_unadj
    ]

    # Transfers Params
    include_transfers_features: [
        first_buy,
        # first_sell,
        # initial_hold_time,
    ]

    # Scenarios Params
    include_scenario_features: False
    scenario_performance_features: [
        # crypto_net_flows/crypto_inflows/winsorized,
        crypto_net_flows/max_investment/winsorized,
        # crypto_net_gain/max_investment/winsorized,
    ]

    # Market Timing Params

    # Clustering Params
    # clustering_n_clusters: [2,4]
    clustering_n_components: 25
    clustering_fill_method: fill_0  # fill_0 or fill_mean
    clustering_include_pca: False


# CheckpointValidation
# WalletModel Modeling Config
modeling:

    # Modeling period filters
    modeling_min_investment: 100
    modeling_min_coins_traded: 0

    # Which wallet performance metric to use as the target variable.
    target_variable: crypto_net_gain/max_investment/winsorized
    train_test_split: 0.2  # test size

    # CheckpointValidation
    # WalletModel Feature Selection
    feature_selection:
        # Column patterns to remove
        drop_patterns: [
            # timing|*,
            timing|*/buy_mean*,
            timing|*/sell_mean*,
            timing|*/sell_weighted*,
            # timing|volume_sma_12/lead_120/*,






            timing|volume_sma_12/lead_500/*,
            timing|volume_sma_12/lead_365/*,
            timing|volume_sma_12/lead_300/*,
            timing|volume_sma_12/lead_200/*,
            # timing|volume_sma_12/lead_150/*,
            timing|volume_sma_12/lead_100/*,
            timing|volume_sma_12/lead_80/*,
            timing|volume_sma_12/lead_50/*,


            timing|price_sma_2/lag_500/*,
            timing|price_sma_2/lag_365/*,
            timing|price_sma_2/lag_300/*,
            # timing|price_sma_2/lag_200/*,
            timing|price_sma_2/lag_150/*,
            timing|price_sma_2/lag_100/*,
            timing|price_sma_2/lag_80/*,
            # timing|price_sma_2/lag_50/*,


            timing|price_sma_2/lead_500/*,
            timing|price_sma_2/lead_365/*,
            timing|price_sma_2/lead_300/*,
            timing|price_sma_2/lead_200/*,
            timing|price_sma_2/lead_150/*,
            # timing|price_sma_2/lead_100/*,
            timing|price_sma_2/lead_80/*,
            timing|price_sma_2/lead_50/*,


            timing|volume_sma_12/lag_500/*,
            timing|volume_sma_12/lag_365/*,
            timing|volume_sma_12/lag_300/*,
            timing|volume_sma_12/lag_200/*,
            timing|volume_sma_12/lag_150/*,
            timing|volume_sma_12/lag_100/*,
            # timing|volume_sma_12/lag_80/*,
            timing|volume_sma_12/lag_50/*,




            # performance|*,
            # performance|*/max_investment/*,
            # performance|*/crypto_inflows/*,
            # performance|*/twb/*,
            # performance|*/active_twb/*,
            performance|crypto_net_gain/crypto_inflows/*,
            performance|crypto_net_gain/twb/*,
            performance|crypto_net_gain/active_twb/*,
            performance|*/log|*,
            performance|*/ntile_rank|*,

            # trading|*,
            # trading|crypto_net_gain|*,
            # trading|total_volume|*,
            trading|unique_coins_traded|*,
            trading|transaction_days|*,
            trading|average_transaction|*,
            trading|activity_density|*,
            trading|crypto_inflows|*,
            trading|max_investment|*,
            trading|crypto_net_flows|*,
            trading|crypto_outflows|*,
            trading|crypto_net_cash_flows|*,
            trading|crypto_cash_sells|*,
            trading|crypto_cash_buys|*,
            trading|time_weighted_balance|*,
            trading|active_time_weighted_balance|*,
            trading|days_held/*,
            trading|time_weighted_return/*,
            trading|annualized_twr/*,

            # mktcap|*,
            # mktcap|end_portfolio_wtd_market_cap/market_cap|*,

            # transfers|*,
            # transfers|first_sell/*,
            # transfers|initial_hold_time/*,
            # transfers|initial_hold_time/avg_wallet_rank|*,
            # transfers|initial_hold_time/median_avg_wallet_rank|*,
            # transfers|initial_hold_time/min_avg_wallet_rank|*,
            # transfers|initial_hold_time/new_coin_transaction_counts|*,

            # scenario|*,
            # scenario|sells_best/*,
            scenario|sells_worst/*,

            # scenario|sells_best/crypto_net_flows_max_investment_winsorized*,
            # scenario|sells_worst/crypto_net_flows_max_investment_winsorized*,

            cluster|*,

            '*|w1',
        ]

        # Correlation/variance-based removal
        variance_threshold: 0.00 # features with this level of variance or less will be removed
        # correlation_threshold: 2.0 # features above this correlation coefficient will be removed
        protected_features: [
            cluster|
        ]

    # CheckpointValidation
    # WalletModel Params
    # Model specifics
    model_type: xgb
    model_params:

        # Core Tree Params (Always Active)
        # -------------------------------
        eval_metric: [rmse]

        max_depth: 21  # how deep the trees can go
        # min_child_weight_pct: 0.0001  # what % of rows each tree must have
        min_child_weight: 15  # what % of rows each tree must have
        subsample: 1.0  # samples rows, e.g. trees use x% of all wallet rows
        colsample_bytree: 0.9  # samples columns, e.g. trees use x% of all column features

        # Performance Profiles (Choose One Section)
        # --------------------------------------
        # CHECKPOINTER
        n_estimators: 400  # number of trees to train in the model
        learning_rate: 0.05  # step size for updates to weights during training
        early_stopping_rounds: 25  # stop training if no improvement after x rounds
        gamma: 0.005  # minimum gain required to split further on a leaf node
        tree_method: hist  # method for building trees, e.g., histogram-based
        max_bin: 256  # how many bins to categorize features into

        # Threading Controls
        n_jobs: -1
        nthread: -1

        random_state: 42


    # CheckpointValidation
    # WalletModel Grid Search
    grid_search_params:

        # -------------------------------
        # enabled: True
        # -------------------------------


        # Search Methodology
        drop_patterns_include_n_features: 1

        n_iter: 40  # random search limit
        n_splits: 4  # cv splits
        scoring: neg_root_mean_squared_error

        build_post_search_model: False  # whether to build a model after the grid search
        verbose_level: 3  # scikit-learn verbosity

        # # Target variables
        # target_variables: [
        #     crypto_net_gain/max_investment/winsorized,
        #     # crypto_net_gain/max_investment/ntile_rank,
        # ]

        # Params
        param_grid:

            # # Depth and Child Weight
            # regressor__min_child_weight_pct: [0.00004, 0.00007, 0.0001]
            # regressor__min_child_weight: [10, 15, 20]
            # regressor__max_depth: [21, 24, 27, 30]  # basic depth param

            # Col/Row Sampling
            # regressor__subsample: [0.8, 0.9, 1.0]   # samples rows, e.g. trees use x% of all wallet rows
            # regressor__colsample_bytree: [0.95, 1.0]   # samples columns, e.g. trees use x% of all column features

            # # Model Speed
            # regressor__tree_method: [hist, approx, auto]
            # regressor__max_bin: [64, 128, 256]
            # regressor__gamma: [0.007, 0.01, 0.015]  # controls the minimum loss reduction needed to split a node

            # Tree Training Speed Overrides
            regressor__n_estimators: [200]
            regressor__learning_rate: [0.05]
            # regressor__gamma: [0.01]

            # Optimize for Speed
            # regressor__n_jobs: [4]  # how many models to build at once
            # regressor__nthread: [4]  # how many threads each model can use
            # regressor__max_bin: [128]
            # regressor__tree_method: [hist]


            # Column Selection
            drop_columns__drop_patterns: [
                [],
                # [],
                # [timing|*],
                # [timing|price_sma_2/lag_21/*],
                # [timing|price_sma_2/lag_30/*],
                # [timing|*/buy_mean*],
                # [timing|*/buy_weighted*],
                # [timing|volume_sma_12/*_30*],
                # [timing|price_sma_*/*],
                # [timing|*/*_7/*],
                # [timing|*/*_21/*],
                # [timing|price_sma_2/lag_500/*],
                # [timing|price_sma_2/lag_365/*],
                # [timing|price_sma_2/lag_300/*],
                # [timing|price_sma_2/lag_200/*],
                # [timing|price_sma_2/lag_150/*],
                # [timing|price_sma_2/lag_100/*],
                # [timing|price_sma_2/lag_80/*],
                # [timing|price_sma_2/lag_50/*],
                # [timing|price_sma_2/lead_500/*],
                # [timing|price_sma_2/lead_365/*],
                # [timing|price_sma_2/lead_300/*],
                # [timing|price_sma_2/lead_200/*],
                # [timing|price_sma_2/lead_150/*],
                # [timing|price_sma_2/lead_100/*],
                # [timing|price_sma_2/lead_80/*],
                # [timing|price_sma_2/lead_50/*],
                # [timing|volume_sma_12/lag_500/*],
                # [timing|volume_sma_12/lag_365/*],
                # [timing|volume_sma_12/lag_300/*],
                # [timing|volume_sma_12/lag_200/*],
                # [timing|volume_sma_12/lag_150/*],
                # [timing|volume_sma_12/lag_100/*],
                # [timing|volume_sma_12/lag_80/*],
                # [timing|volume_sma_12/lag_50/*],
                [timing|volume_sma_12/lead_500/*],
                [timing|volume_sma_12/lead_365/*],
                [timing|volume_sma_12/lead_300/*],
                [timing|volume_sma_12/lead_200/*],
                [timing|volume_sma_12/lead_150/*],
                [timing|volume_sma_12/lead_100/*],
                [timing|volume_sma_12/lead_80/*],
                [timing|volume_sma_12/lead_50/*],

                # [performance|*],
                # [performance|crypto_net_gain/*],
                # [performance|crypto_net_flows/*],
                # [performance|crypto_net_cash_flows/*],
                # [performance|*/twb/*],
                # [performance|*/active_twb/*],
                # [performance|*/max_investment/*],
                # [performance|*/crypto_inflows/*],
                # [performance|crypto_net_gain/crypto_cash_buys/*],
                # [performance|crypto_net_gain/twb/*],
                # [performance|crypto_net_gain/active_twb/*],
                # [performance|crypto_net_flows/active_twb/*],
                # [performance|crypto_net_flows/twb/*],
                # [performance|crypto_net_flows/crypto_cash_buys/*],
                # [performance|crypto_net_cash_flows/crypto_inflows/*],
                # [performance|crypto_net_cash_flows/crypto_cash_buys/*],
                # [performance|*/crypto_cash_buys/*],
                # [performance|*/base|*],
                # [performance|*/winsorized|*],
                # [performance|*/log|*],
                # [performance|*/rank|*],
                # [performance|*/ntile_rank|*],

                # [trading|*],
                # [trading|days_held/min|*],
                # [trading|days_held/max|*],
                # [trading|days_held/mean|*],
                # [trading|days_held/median|*],
                # [trading|days_held/std|*],
                # [trading|time_weighted_return/min|*],
                # [trading|time_weighted_return/max|*],
                # [trading|time_weighted_return/mean|*],
                # [trading|time_weighted_return/median|*],
                # [trading|time_weighted_return/std|*],
                # [trading|annualized_twr/min|*],
                # [trading|annualized_twr/max|*],
                # [trading|annualized_twr/mean|*],
                # [trading|annualized_twr/median|*],
                # [trading|annualized_twr/std|*],
                # [trading|days_held/*],
                # [trading|time_weighted_return/*],
                # [trading|time_weighted_return/*],
                # [trading|crypto_net_gain|*],
                # [trading|unique_coins_traded|*],
                # [trading|transaction_days|*],
                # [trading|total_volume|*],
                # [trading|average_transaction|*],
                # [trading|activity_density|*],
                # [trading|crypto_inflows|*],
                # [trading|max_investment|*],
                # [trading|crypto_net_flows|*],
                # [trading|crypto_outflows|*],
                # [trading|crypto_net_cash_flows|*],
                # [trading|crypto_cash_sells|*],
                # [trading|crypto_cash_buys|*],
                # [trading|time_weighted_balance|*],
                # [trading|active_time_weighted_balance|*],

                # [mktcap|*],
                # [mktcap|end_portfolio_wtd_market_cap/market_cap_filled|*],
                # [mktcap|volume_wtd_market_cap/market_cap_filled|*],
                # [mktcap|end_portfolio_wtd_market_cap/market_cap|*],
                # [mktcap|volume_wtd_market_cap/market_cap|*],
                # [mktcap|*/market_cap_filled|*],
                # [mktcap|*/market_cap_imputed|*],
                # [mktcap|*/market_cap|*],

                # [transfers|*],
                # [transfers|first_buy/*],
                # [transfers|first_sell/*],
                # [transfers|initial_hold_time/*],
                # [transfers|first_buy/avg_wallet_rank|*],
                # [transfers|first_buy/median_avg_wallet_rank|*],
                # [transfers|first_buy/min_avg_wallet_rank|*],
                # [transfers|first_buy/new_coin_transaction_counts|*],
                # [transfers|first_sell/avg_wallet_rank|*],
                # [transfers|first_sell/median_avg_wallet_rank|*],
                # [transfers|first_sell/min_avg_wallet_rank|*],
                # [transfers|first_sell/new_coin_transaction_counts|*],
                # [transfers|initial_hold_time/avg_wallet_rank|*],
                # [transfers|initial_hold_time/median_avg_wallet_rank|*],
                # [transfers|initial_hold_time/min_avg_wallet_rank|*],
                # [transfers|initial_hold_time/new_coin_transaction_counts|*],

                # [scenario|*],
                # [scenario|sells_best/*],
                # [scenario|sells_worst/*],
                # [scenario|buy_delay_wtd_performance|*],
                # [scenario|sell_delay_wtd_performance|*],
                # [scenario|sells_best_v_base/*],
                # [scenario|sells_worst_v_base/*],
                # [scenario|sells_best/crypto_net_flows_crypto_inflows_winsorized*],
                # [scenario|sells_best/crypto_net_flows_max_investment_winsorized*],
                # [scenario|sells_best/crypto_net_gain_max_investment_winsorized*],
                # [scenario|sells_worst/crypto_net_flows_crypto_inflows_winsorized*],
                # [scenario|sells_worst/crypto_net_flows_max_investment_winsorized*],
                # [scenario|sells_worst/crypto_net_gain_max_investment_winsorized*],
                # [scenario|sells_best_v_base/crypto_net_gain_max_investment_winsorized*],
                # [scenario|sells_best_v_base/crypto_net_flows_max_investment_winsorized*],
                # [scenario|sells_best_v_base/crypto_net_flows_crypto_inflows_winsorized*],
                # [scenario|sells_worst_v_base/crypto_net_gain_max_investment_winsorized*],
                # [scenario|sells_worst_v_base/crypto_net_flows_max_investment_winsorized*],
                # [scenario|sells_worst_v_base/crypto_net_flows_crypto_inflows_winsorized*],


                # [cluster|*],

                # [*|w1],
                # [*|w2],
                # [*|w3],
                # [*|w4],
                # [*|all_windows],
            ]


    # Coin model workflow params
    score_name: iterating  # reference name for feature columns etc

training_data:
  # Variables used to define the training data

  # Defining the modeling and training periods (dates must follow YYYY-MM-DD format)
  # The modeling period end date and training period start and end dates are automatically
  # imputed using utils.py function calculate_period_dates() when load_config() is run
  modeling_period_start: "2024-10-15"  # Start date for the modeling period
  modeling_period_duration: 30    # Duration of the modeling period in days
  training_period_duration: 90    # Duration of the training period in days

  # The entire training data generation pipeline will be run for this many additional \
  # windows, with the periods moved back the full modeling+training duration time
  additional_windows: 0

data_cleaning:
  # Variables used to clean and filter raw data before training data is built

  # profits_df filters: The goal is to remove wallets that don't belong in the dataset (e.g., CEX, mint, contract wallets)
  profitability_filter: 15000000  # Exclude wallets with profits or losses greater than or equal to this amount (USD)
  inflows_filter: 20000000  # Exclude wallets with inflows greater than or equal to this amount (USD)

  # market_data_df filters: Define how to handle missing price data
  max_gap_days: 25  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
  min_daily_volume: 5000 # Minimum average daily volume the coin must have
  exclude_coins_without_transfers: True  # determines whether to create price features for coins without transfers data

  # wallet filters: defines which wallets are included in analysis
  minimum_wallet_inflows: 5000 # The amount of lifetime USD inflows a wallet must have to be included in the training data

# CoinModel Config

training_data:

    # where to save local files
    parquet_folder: temp/coin_modeling_dfs


# CoinModel Cleaning
# Variables used to clean and filter raw data before training data is built
data_cleaning:

    # Market data filters
    max_initial_market_cap: 999150_000_000  # coins above this market cap as of the start of the training period will be removed from all datasets
    max_gap_days: 30  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
    min_daily_volume: 500 # Minimum average daily volume the coin must have


# CoinModel Wallet Scores
wallet_scores:

    #KeyParam Scores to include as segments + metrics
    coins_wallet_scores_folder: temp/coin_modeling_dfs/wallet_scores_dda744
    # wallet_scores: [
    #     dda528_net_gain_1k,
    #     dda528_net_gain_max_inv_025,
    # ]
    score_params:
        # Return Rate
        cw_return_rate_000:
            target_variable: cw_crypto_net_gain/max_investment/base
            target_var_class_threshold: 0.00
            y_pred_threshold: 0.4

        # cw_return_rate_005:
        #     target_variable: cw_crypto_net_gain/max_investment/base
        #     target_var_class_threshold: 0.05
        #     y_pred_threshold: 0.6

        cw_return_rate_025:
            target_variable: cw_crypto_net_gain/max_investment/base
            target_var_class_threshold: .25
            y_pred_threshold: 0.6

        # cw_return_rate_040:
        #     target_variable: cw_crypto_net_gain/max_investment/base
        #     target_var_class_threshold: .40
        #     y_pred_threshold: 0.6

        cw_return_rate_regression:
            model_type: regression
            target_variable: cw_crypto_net_gain/max_investment/winsorized

        # return_rate_regression:
        #     model_type: regression
        #     target_variable: crypto_net_gain/max_investment/winsorized

        # USD Metrics
        net_gain_1000:
            target_variable: crypto_net_gain
            target_var_class_threshold: 1000
            y_pred_threshold: 0.7

        cw_net_flows_1000:
            target_variable: cw_crypto_net_flows
            target_var_class_threshold: 1000
            y_pred_threshold: 0.7


# CoinModel Segments
wallet_segments:


    wallet_scores_binary_segments: True
    wallet_scores_residuals_segments: False
    wallet_scores_confidence_segments: False

    # score_segment_quantiles: [0.95]  # higher is better; how to assign wallet a score segment
    # score_segment_quantiles: [0.15, 0.85]  # higher is better; how to assign wallet a score segment
    # training_period_cluster_groups: [4]  # which n clusters assignment from the training period to segment by



# CoinModel Features
wallet_features:

    # Score features params
    usd_materiality: 20 # Wallets with volume/balances below this won't be counted in medians/distributions/etc

    # Metrics to drop based on low observed importance
    drop_trading_metrics: [
        # average_transaction
    ]

    # Features from the feature_engineering directory
    toggle_prior_model_features: False


# CoinModel Modeling Config
# Variables used in the generation of the validation period coin model
coin_modeling:

    #KeyParam Model Type
    # Target variable parameters
    # model_type: regression  # "regression" or "classification"
    model_type: classification  # "regression" or "classification"

    #KeyParam Target Variable
    # target_variable: coin_return_winsorized
    target_variable: coin_return
    # target_variable: coin_return_pctile_full
    # target_variable: coin_return_pctile
    target_var_class_threshold: 0.4  # a classification model will try to predict the target var above this value
    y_pred_threshold: 0.4  # scores above this probability threshold are positive predictions

    returns_winsorization: 0.03


    #KeyParam Modeling Cohort Definition
    # Thresholds for coin inclusion in training data
    min_cohort_wallets: 10  # how many wallets must hold a coin for the coin to be elegible for forecasting
    min_cohort_balance: 10  # how much USD all wallets must hold for the coin to be elegible for forecasting

    # Thresholds for coin inclusion in training data
    min_market_cap: 000_000  # coins below this market cap will not be included in performance assessments
    max_market_cap: 999150_000_000  # coins above this market cap will not be included in performance assessments

    # Train/Test/Eval split
    test_size: 0.2  # what % of the total population will be used as test
    eval_size: 0.1  # what % used for the early stopping eval set



    # CoinModel Feature Selection
    # Params used to remove unnecessary features
    feature_selection:

        # Column patterns to remove
        drop_patterns: [
            # Facts
            # -----
            # all_wallets*,

            score_quantile|*,
            # score_quantile|net_gain_max_investment_winsorized_base_score/50_85pct|*,


            # Metrics
            # -------
            # '*|trading/crypto_cash_buys|*',
            # '*|trading/crypto_cash_sells|*',
            # '*|trading/crypto_inflows|*',
            # '*|trading/crypto_net_cash_flows|*',
            # '*|trading/crypto_net_flows|*',
            # '*|trading/crypto_net_gain|*',
            # '*|trading/crypto_outflows|*',
            # '*|trading/max_investment|*',
            # '*|trading/total_volume|*',
            # '*|trading/unique_coins_traded|*',
            # '*|trading/average_transaction|*',
            # '*|balances/usd_balance_starting*|*',
            # '*|balances/usd_balance_ending*|*',


            # Transformations
            # ---------------
            '*|*/net_gain_1000_score/*',
            '*|*/cw_return_rate_regression_score/*',
            '*|*/cw_return_rate_040_score/*',
            '*|*/cw_return_rate_025_score/*',
            '*|*/cw_return_rate_005_score/*',
            '*|*/cw_return_rate_000_score/*',
            '*|*/cw_net_flows_1000_score/*',
            '*|*/return_rate_regression_score/*',
            # '*|aggregations/aggregations/sum',
            # '*|aggregations/aggregations/sum_pct',
            # '*|aggregations/aggregations/count_pct',
            # '*|aggregations/aggregations/count',

            # '*|score_dist/*',
            # '*|score_dist/*_median',
            # '*|score_dist/*_p05',
            # '*|score_dist/*_p10',
            # '*|score_dist/*_p90',
            # '*|score_dist/*_p95',
            # '*|score_dist/*_std',

            '*|score_wtd/*',

        ]

        # Correlation/variance-based removal
        scale_before_selection: False # whether to apply variance thresholds before or after scaling data
        variance_threshold: 0.00 # features with this level of variance or less will be removed
        correlation_threshold: 1.999 # features above this correlation coefficient will be removed
        protected_features: []

    # CoinModel Params
    model_params:
        n_estimators: 400
        max_depth: 3
        min_child_weight: 10
        learning_rate: 0.02
        colsample_bytree: 1.0
        subsample: 1.0
        gamma: 0.02
        max_bin: 256
        early_stopping_rounds: 20
        eval_metric: rmse

        # non modeling metaparams
        random_state: 42
        n_jobs: -1

    # CoinModel Grid Search
    grid_search_params:

        # -------------------------------
        # enabled: True  # DDA718
        # -------------------------------

        # Search Methodology
        drop_patterns_include_n_features: 1

        n_iter: 400  # random search limit
        n_splits: 4  # cv splits
        regressor_scoring: neg_root_mean_squared_error
        classifier_scoring: coin_validation_auc_scorer

        build_post_search_model: False  # whether to build a model after the grid search
        verbose_level: 3  # scikit-learn verbosity


        # Params
        param_grid:

            # # Depth and Child Weight
            estimator__max_depth: [3,4,5,6]
            # estimator__min_child_weight: [10,15,20,25]

            # Col/Row Sampling
            # estimator__subsample: [0.5, .6, .7, .8, .9, 1.0]
            # estimator__colsample_bytree: [0.9, 1.0]

            # # Model Speed
            # estimator__tree_method: [hist, approx, auto]
            # estimator__max_bin: [64, 128, 256]
            # estimator__gamma: [0.0, 0.1, 1.0]  # controls the minimum loss reduction needed to split a node

            # # Tree Training Speed Overrides
            # estimator__n_estimators: [150]
            # estimator__learning_rate: [0.02]

            # Optimize for Speed
            estimator__n_jobs: [4]  # how many models to build at once
            estimator__nthread: [4]  # how many threads each model can use
            # estimator__max_bin: [128]
            # estimator__tree_method: [hist]

            # drop_columns__drop_patterns: [
                # [],
                # [time_series|market_data|market_cap_last],
                # [time_series|market_data|mfi_first],
                # [time_series|market_data|mfi_last],
                # [time_series|market_data|obv_last],
                # [time_series|market_data|price_rsi_14_first],
                # [time_series|market_data|price_rsi_14_last],
                # [time_series|market_data|price_sma_5_pct_change_15d_period_1],
                # [time_series|market_data|price_sma_5_pct_change_15d_period_2],
                # [time_series|market_data|price_sma_5_pct_change_15d_period_3],
                # [time_series|market_data|price_sma_5_pct_change_15d_period_4],
                # [time_series|market_data|volume_pct_change_15d_period_1],
                # [time_series|market_data|volume_pct_change_15d_period_2],
                # [time_series|market_data|volume_pct_change_15d_period_3],
                # [time_series|market_data|volume_pct_change_15d_period_4],
                # [time_series|market_data|volume_sum_15d_period_1],
                # [time_series|market_data|volume_sum_15d_period_2],
                # [time_series|market_data|volume_sum_15d_period_3],
                # [time_series|market_data|volume_sum_15d_period_4],
                # [wallet_cohorts|normies|buyers_new_sum_15d_period_1],
                # [wallet_cohorts|normies|buyers_new_sum_15d_period_2],
                # # [wallet_cohorts|normies|total_balance_last_15d_period_1],
                # [wallet_cohorts|normies|total_balance_last_15d_period_2],
                # [wallet_cohorts|normies|total_bought_sum_15d_period_1],
                # [wallet_cohorts|normies|total_bought_sum_15d_period_2],
                # [wallet_cohorts|normies|total_holders_last_15d_period_1],
                # [wallet_cohorts|normies|total_holders_last_15d_period_2],
                # [wallet_cohorts|normies|total_sold_sum_15d_period_1],
                # [wallet_cohorts|normies|total_sold_sum_15d_period_2],
                # [wallet_cohorts|whales|buyers_new_sum],
                # [wallet_cohorts|whales|buyers_repeat_sum_15d_period_1],
                # [wallet_cohorts|whales|buyers_repeat_sum_15d_period_2],
                # [wallet_cohorts|whales|total_balance_last_15d_period_1],
                # [wallet_cohorts|whales|total_balance_last_15d_period_2],
                # [wallet_cohorts|whales|total_bought_sum_15d_period_1],
                # [wallet_cohorts|whales|total_bought_sum_15d_period_2],


                # [score_quantile|net_gain_max_investment_winsorized_base_score/0_5pct|*],
                # [score_quantile|net_gain_max_investment_winsorized_base_score/5_15pct|*],
                # [score_quantile|net_gain_max_investment_winsorized_base_score/15_50pct|*],
                # [score_quantile|net_gain_max_investment_winsorized_base_score/50_85pct|*],
                # [score_quantile|net_gain_max_investment_winsorized_base_score/85_95pct|*],
                # [score_quantile|net_gain_max_investment_winsorized_base_score/95_100pct|*],

            #     # [],
            #     ['*|trading/crypto_cash_buys|*'],
            #     ['*|trading/crypto_cash_sells|*'],
            #     # ['*|trading/crypto_inflows|*'],
            #     ['*|trading/crypto_net_cash_flows|*'],
            #     ['*|trading/crypto_net_flows|*'],
                # ['*|trading/crypto_net_gain|*'],
            #     ['*|trading/crypto_outflows|*'],
            #     ['*|trading/max_investment|*'],
            #     ['*|trading/total_volume|*'],
            #     # ['*|trading/unique_coins_traded|*'],
            #     ['*|balance/usd_balance_241031|*'],

                # # ['*|score_dist/*'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_score_median'],
                # # ['*|score_dist/net_gain_winsorized_dda619_grid_score_p10'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_score_p90'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_score_std'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_residual_median'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_residual_p10'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_residual_p90'],
                # ['*|score_dist/net_gain_winsorized_dda619_grid_residual_std'],

                # ['training_clusters|k2_cluster/cluster_0|*'],
                # ['training_clusters|k2_cluster/cluster_1|*'],
                # ['training_clusters|k4_cluster/cluster_0|*'],
                # ['training_clusters|k4_cluster/cluster_1|*'],
                # ['training_clusters|k4_cluster/cluster_2|*'],
                # ['training_clusters|k4_cluster/cluster_3|*'],
            # ]




    # Coin model workflow params
    score_name: net_gain_max_investment_winsorized_base  # reference name for feature columns etc

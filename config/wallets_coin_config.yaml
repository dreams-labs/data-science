# Variables used to clean and filter raw data before training data is built
data_cleaning:

    # Market data filters
    max_initial_market_cap: 999150_000_000  # coins above this market cap as of the start of the training period will be removed from all datasets
    max_gap_days: 50  # Maximum consecutive missing days to fill in price gaps (e.g., price interpolation for gaps up to 2 days)
    min_daily_volume: 500 # Minimum average daily volume the coin must have


# Variables used for comnverting the wallet scores into coin forecasts
coin_validation_analysis:

    # Forecasting methods
    top_n: 5  # how many of the top coins of a given sort method will be included in performance assessments
    sort_method: "top_wallet_balance_pct"  # which coin wallet metric to use for coin forecast rankings

# Which wallet features to load
wallet_features:

    # Metadata for which scores to load
    wallet_scores_path: "temp/wallet_modeling_score_dfs"
    wallet_scores: [
        'net_gain_ntile',
        'net_gain_winsor',
        'net_gain_raw'
    ]


# How to segment wallet features
wallet_segmentation:
    score_segment_quantiles: [0.1, 0.3, 0.5, 0.7, 0.9]  # higher is better; how to assign wallet a score segment
    # score_segment_quantiles: [0.05, 0.15, 0.5, 0.85, 0.95]  # higher is better; how to assign wallet a score segment
    training_period_n_clusters: 4  # which n clusters assignment from the training period to segment by

# Variables used in the generation of the validation period coin model
coin_modeling:

    # Thresholds for coin inclusion in training data
    min_cohort_wallets: 25  # how many wallets must hold a coin for the coin to be elegible for forecasting
    min_cohort_balance: 25000  # how much USD all wallets must hold for the coin to be elegible for forecasting

    # Thresholds for coin inclusion in training data
    min_market_cap: 00_000  # coins below this market cap will not be included in performance assessments
    max_market_cap: 999350_000_000  # coins above this market cap will not be included in performance assessments

    # Target variable parameters
    # target_variable: "coin_return_winsorized"
    target_variable: "coin_return_pctile_full"
    # target_variable: "coin_return_pctile"


    returns_winsorization: 0.02
    drop_columns: [
        # # 'balance_wtd_mean_score',
        # 'all_cohort_wallets_balance',
        # 'all_cohort_wallets_count',
        # 'all_cohort_wallets_mean_score',
        # 'top_wallets_balance',
        # 'top_wallets_count',
        # 'top_wallets_mean_score',
        # # 'top_wallets_balance_pct',
        # 'top_wallets_count_pct',
    ]

    # Model params
    model_type: "xgb"
    model_params:
        n_estimators: 400
        max_depth: 4
        learning_rate: 0.05
        subsample: 0.8
        colsample_bytree: 1.0
        min_child_weight: 5
        random_state: 42
        n_jobs: -1
